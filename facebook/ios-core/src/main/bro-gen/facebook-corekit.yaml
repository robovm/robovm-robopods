package: org.robovm.pods.facebook.core
framework: FBSDKCoreKit
include: [foundation, uikit, coregraphics, dispatch, webkit, ../../../../../bolts/ios/src/main/bro-gen/bolts.yaml]
clang_args: ['-x', 'objective-c']
headers: [FBSDKCoreKit.h, FBSDKButton.h]
typedefs:
    FBSDKGraphRequestHandler: '@Block VoidBlock3<FBSDKGraphRequestConnection, NSObject, NSError>'
    FBSDKDeferredAppLinkHandler: '@Block VoidBlock2<NSURL, NSError>'
    FBSDKTestUsersManagerRetrieveTestAccountTokensHandler: '@Block VoidBlock2<NSArray<FBSDKAccessToken>, NSError>'
    FBSDKTestUsersManagerRemoveTestAccountHandler: '@Block VoidBlock1<NSError>'
    'void (^)(FBSDKProfile *, NSError *)': '@Block VoidBlock2<FBSDKProfile, NSError>'
    OS_dispatch_source: DispatchSource

enums:
    FBSDKAppEventsFlushBehavior: {}
    FBSDKErrorCode: {suffix: ErrorCode}
    FBSDKGraphRequestErrorCategory: {}
    FBSDKProfilePictureMode: {}
    FBSDKProductAvailability: {}
    FBSDKProductCondition: {}
    FBSDKError: {}
    FBSDKGraphRequestError: {}
    FBSDKAppLinkNavigationType: {}
    FBSDKIncludeStatusBarInSize: {}
        
classes:
    FBSDKAccessToken: # DONE
        properties:
            'declinedPermissions':
                type: Set<String>
                marshaler: NSSet.AsStringSetMarshaler
            'permissions':
                type: Set<String>
                marshaler: NSSet.AsStringSetMarshaler
        methods:
            '-initWithTokenString:permissions:declinedPermissions:appID:userID:expirationDate:refreshDate:':
                name: init
                parameters:
                    permissions:
                        type: Set<String>
                        marshaler: NSSet.AsStringSetMarshaler
                    declinedPermissions:
                        type: Set<String>
                        marshaler: NSSet.AsStringSetMarshaler
            '-initWithTokenString:permissions:declinedPermissions:appID:userID:expirationDate:refreshDate:dataAccessExpirationDate:':
                name: init
            '-hasGranted:':
                trim_after_first_colon: true
            '-isEqualToAccessToken:':
                name: equalsTo
            '+currentAccessToken':
                property: true
            '+refreshCurrentAccessToken:':
                trim_after_first_colon: true
            '+new':
                exclude: true
    FBSDKAppEvents: # DONE
        methods:
            '+logEvent:.*':
                name: logEvent
                parameters:
                    parameters:
                        type: 'NSDictionary<NSString, NSObject>'
            '+logPurchase:.*':
                name: logPurchase
                parameters:
                    parameters:
                        type: 'NSDictionary<NSString, NSObject>'
            '+flushBehavior':
                property: true
            '+loggingOverrideAppID':
                property: true
            '+requestForCustomAudienceThirdPartyIDWithAccessToken:':
                name: requestForCustomAudienceThirdPartyID
            '+logPushNotificationOpen.*':
                trim_after_first_colon: true
                parameters:
                    payload:
                        type: UIRemoteNotification
            '+logProductItem:availability:condition:description:imageLink:link:title:priceAmount:currency:gtin:mpn:brand:parameters:':
                name: logProductItem
            '+setUserEmail:firstName:lastName:phone:dateOfBirth:gender:city:state:zip:country:':
                name: setUserData
            '+updateUserProperties:handler:':
                name: updateUserProperties
    FBSDKApplicationDelegate: # DONE
        methods:
            '-application:openURL:sourceApplication:annotation:':
                name: openURL
                parameters:
                    annotation:
                        type: ObjCProtocol
            '-application:openURL:options:':
                name: openURL
            '-application:didFinishLaunchingWithOptions:':
                name: didFinishLaunching
                parameters:
                    launchOptions:
                        type: UIApplicationLaunchOptions
            '+sharedInstance':
                property: true
    FBSDKAppLinkResolver: # DONE
        methods:
            '-appLinksFromURLsInBackground:':
                name: getAppLinksFromURLsInBackground
                return_type: BFTask<NSArray<BFAppLink>>
                parameters:
                    urls:
                        type: NSArray<NSURL>
            '-appLinksFromURLs:handler:':
                name: getAppLinksFromURLs
            '-appLinkFromURL:handler:':
                name: getAppLinkFromURL
            '+resolver':
                exclude: true
    FBSDKAppLinkUtility: # DONE
        methods:
            '+fetchDeferredAppLink:':
                trim_after_first_colon: true
            '+appInvitePromotionCodeFromURL:':
                name: getAppInvitePromotionCodeFromURL
    FBSDKButton: {} # DONE
    FBSDKGraphErrorRecoveryProcessor: # DONE
        methods:
            '-processError:request:delegate:':
                trim_after_first_colon: true
            '-didPresentErrorWithRecovery:contextInfo:':
                name: didPresentError
                parameters:
                    contextInfo:
                        type: '@Pointer long'
    FBSDKGraphRequest: # DONE
        methods:
            '-init.*':
                name: init
            '-startWithCompletionHandler:':
                name: start
    FBSDKGraphRequestConnection: # DONE
        methods:
            '-addRequest:.*':
                trim_after_first_colon: true
            '-overrideVersionPartWith:':
                name: overrideVersionPart
    FBSDKGraphRequestDataAttachment: # DONE
        methods:
            '-initWithData:filename:contentType:':
                name: init
    FBSDKProfile: # DONE
        methods:
            '-initWithUserID:firstName:middleName:lastName:name:linkURL:refreshDate:':
                name: init
            '-imageURLForPictureMode:size:':
                name: getImageURL
            '-imagePathForPictureMode:size:':
                name: getImagePath
            '-isEqualToProfile:':
                name: equalsTo
            '+currentProfile':
                property: true
            '+enableUpdatesOnAccessTokenChange:':
                trim_after_first_colon: true
            '+loadCurrentProfileWithCompletion:':
                name: loadCurrentProfile
    FBSDKProfilePictureView: {} # DONE
    FBSDKSettings: # DONE
        methods:
            '+appID':
                property: true
            '+appURLSchemeSuffix':
                property: true
            '+clientToken':
                property: true
            '+displayName':
                property: true
            '+facebookDomainPart':
                property: true
            '+JPEGCompressionQuality':
                property: true
            '+limitEventAndDataUsage':
                name: limitsEventAndDataUsage
            '+sdkVersion':
                property: true
            '+loggingBehavior':
                property: true
#                return_type: Set<FBSDKLoggingBehavior>
#                return_marshaler: FBSDKLoggingBehavior.AsSetMarshaler
            '+setLoggingBehavior:': {}
#                name: setLoggingBehavior
#                parameters:
#                    loggingBehavior:
#                        type: Set<FBSDKLoggingBehavior>
#                        marshaler: FBSDKLoggingBehavior.AsSetMarshaler
            '+(enableLoggingBehavior:|disableLoggingBehavior:)':
                trim_after_first_colon: true
                parameters:
                    loggingBehavior:
                        type: FBSDKLoggingBehavior
            '+legacyUserDefaultTokenInformationKeyName':
                property: true 
    FBSDKTestUsersManager: # DONE
        methods:
            '-requestTestAccountTokensWithArraysOfPermissions:createIfNotFound:completionHandler:':
                name: requestTestAccountTokens
                parameters:
                    arraysOfPermissions:
                        type: NSArray<NSSet<NSString>>
            '-addTestAccountWithPermissions:completionHandler:':
                name: addTestAccount
                parameters:
                    permissions:
                        type: Set<String>
                        marshaler: NSSet.AsStringSetMarshaler
            '-removeTestAccount:completionHandler:':
                trim_after_first_colon: true
            '-makeFriendsWithFirst:second:callback:':
                name: makeFriends
            '+sharedInstanceForAppID:appSecret:':
                name: getSharedInstance

    FBSDKUtility: # DONE
        methods:
            '+dictionaryWithQueryString:':
                name: parseQueryString
            '+queryStringWithDictionary:error:':
                name: createQueryString
                throws: NSErrorException
            '+URLDecode:':
                name: urlDecode
            '+URLEncode:':
                name: urlEncode
            '+startGCDTimerWithInterval:block:':
                name: startGCDTimer
    FBSDKAppLink:
        skip_def_constructor: true
        methods:
            '+appLinkWithSourceURL:targets:webURL:':
                name: init
                constructor: true
    FBSDKAppLinkNavigation:
        methods:
            '+navigationWithAppLink:extras:appLinkData:':
                name: create
            '+callbackAppLinkDataForAppWithName:url:':
                name: callbackAppLinkData
            '+resolveAppLink:handler:':
                name: resolve
            '+resolveAppLink:resolver:handler:':
                name: resolve
            '+navigateToAppLink:error:':
                name: navigate
            '+navigateToURL:handler:':
                name: navigate
            '+navigateToURL:resolver:handler:':
                name: navigate
    FBSDKAppLinkReturnToRefererController: {}
    FBSDKAppLinkReturnToRefererView: {}
    FBSDKAppLinkTarget:
        methods:
            '+appLinkTargetWithURL:appStoreId:appName:':
                name: create
    FBSDKMeasurementEvent: {}
    FBSDKURL:
        methods:
            '+URLWithURL:':
                name: URLWithURL
            '+URLWithInboundURL:sourceApplication:':
                name: URLWithInboundURL
    FBSDKWebViewAppLinkResolver: {}

protocols:
    FBSDKErrorRecoveryAttempting: # DONE
        methods:
            '-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:':
                trim_after_first_colon: true
                parameters:
                    contextInfo:
                        type: '@Pointer long'
    FBSDKGraphErrorRecoveryProcessorDelegate: # DONE
        methods:
            '-processorDidAttemptRecovery:didRecover:error:':
                name: didAttemptRecovery
            '-processorWillProcessError:error:':
                name: willProcessError
                default: true
    FBSDKGraphRequestConnectionDelegate: # DONE
        methods:
            '-requestConnectionWillBeginLoading:':
                name: willBeginLoading
            '-requestConnectionDidFinishLoading:':
                name: didFinishLoading
            '-requestConnection:didFailWithError:':
                name: didFail
            '-requestConnection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:':
                name: didSendBodyData
    FBSDKAppLinkResolving:
        methods:
            '-appLinkFromURL:handler:':
                name: getAppLinkFromURL
    FBSDKAppLinkReturnToRefererControllerDelegate:
        methods:
            '-returnToRefererController:willNavigateToAppLink:':
                name: returnToRefererController
            '-returnToRefererController:didNavigateToAppLink:type:':
                name: returnToRefererController
    FBSDKAppLinkReturnToRefererViewDelegate:
        methods:
            '-returnToRefererViewDidTapInsideLink:link:':
                name: returnToRefererViewDidTapInsideLink
    FBSDKCopying: {}
    FBSDKMutableCopying: {}

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?FB.*):
        class: FacebookCore
        name: 'Function__#{g[0]}'

values:
    FBSDKErrorDomain:
        class: FBSDKError
        name: getClassDomain
    FBSDKError(.+)Key:
        enum: FBSDKErrorUserInfoKey
        name: '#{g[0]}'
        type: NSString
        extends: NSErrorUserInfoKey
    FBSDKGraphRequestErrorCategoryKey:
        exclude: true # deprecated
    FBSDKGraphRequestError(GraphErrorCode|GraphErrorSubcode):
        exclude: true # deprecated
    FBSDKGraphRequestError(.+)Key:
        enum: FBSDKGraphRequestErrorUserInfoKey
        name: '#{g[0]}'
        type: NSString
        extends: NSErrorUserInfoKey

    # FBSDKAccessToken
    FBSDKAccessToken(DidChangeNotification):
        class: FBSDKAccessToken
        name: '#{g[0]}'
        type: NSString
    FBSDKAccessTokenDidChangeUserID:
        exclude: true # deprecated
    FBSDKAccessToken(DidChangeUserIDKey|ChangeOld|ChangeNew).*:
        dictionary: FBSDKAccessTokenChangeNotification
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            DidChangeUserIDKey:
                name: DidChangeUserID
                type: boolean
            ChangeOld:
                name: oldToken
                type: FBSDKAccessToken
            ChangeNew:
                name: newToken
                type: FBSDKAccessToken

    # FBSDKAppEvents
    FBSDKAppEvents(LoggingResultNotification):
        class: FBSDKAppEvents
        name: '#{g[0]}'
        type: NSString
    FBSDKAppEvents(OverrideAppIDBundleKey):
        class: FBSDKAppEvents
        name: '#{g[0]}'
        type: NSString
    FBSDKAppEventName(.*):
        enum: FBSDKAppEventName
        name: '#{g[0]}'
        type: NSString
    FBSDKAppEventParameterName(.*):
        enum: FBSDKAppEventParameterName
        name: '#{g[0]}'
        type: NSString
    FBSDKAppEventParameterValue(.*):
        enum: FBSDKAppEventParameterValue
        name: '#{g[0]}'
        type: NSString
    FBSDKLoggingBehavior(.*):
        enum: FBSDKLoggingBehavior
        name: '#{g[0]}'
        type: NSString

    # FBSDKGraphConnection
    FBSDKNonJSONResponseProperty:
        exclude: true
    
    # FBSDKProfile
    FBSDKProfile(DidChangeNotification):
        class: FBSDKProfile
        name: '#{g[0]}'
        type: NSString
    FBSDKProfile(ChangeOld|ChangeNew)Key:
        dictionary: FBSDKProfileChangeNotification
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            ChangeOld:
                name: oldProfile
                type: FBSDKProfile
            ChangeNew:
                name: newProfile
                type: FBSDKProfile

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?FB.*):
        class: FacebookCore
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?FB.*):
        class: FacebookCore
        name: 'Constant__#{g[0]}'
